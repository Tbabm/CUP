{"sample_id": 6019740, "full_name": "lessthanoptimal/BoofCV", "commit_id": "ffb204fd753b92df3a82d37720561e9c89e019d2", "src_method": "public void process(T gray, GrayU8 binary) {\n\t\tif( verbose ) System.out.println(\"ENTER  DetectPolygonFromContour.process()\");\n\t\tInputSanityCheck.checkSameShape(binary, gray);\n\n\t\tif( imageWidth != gray.width || imageHeight != gray.height )\n\t\t\tconfigure(gray.width,gray.height);\n\n\t\t// reset storage for output. Call reset individually here to ensure that all references\n\t\t// are nulled from last time\n\t\tfor (int i = 0; i < foundInfo.size; i++) {\n\t\t\tfoundInfo.get(i).reset();\n\t\t}\n\t\tfoundInfo.reset();\n\n\t\tif( contourEdgeIntensity != null )\n\t\t\tcontourEdgeIntensity.setImage(gray);\n\n\t\tlong time0 = System.nanoTime();\n\n\t\t// find all the contours\n\t\tcontourFinder.process(binary);\n\n\t\tlong time1 = System.nanoTime();\n\n\t\t// Using the contours find the polygons\n\t\tfindCandidateShapes();\n\n\t\tlong time2 = System.nanoTime();\n\n\t\tdouble a = (time1-time0)*1e-6;\n\t\tdouble b = (time2-time1)*1e-6;\n\n\t\tmilliContour.update(a);\n\t\tmilliShapes.update(b);\n\n\t\tif( verbose ) System.out.println(\"EXIT  DetectPolygonFromContour.process()\");\n\t}", "dst_method": "public void process(T gray, GrayU8 binary) {\n\t\tif( verbose ) System.out.println(\"ENTER  DetectPolygonFromContour.process()\");\n\n\t\tif( contourPadded != null && !contourPadded.isCreatePaddedCopy() ) {\n\t\t\tint padding = 2;\n\t\t\tif( gray.width+padding != binary.width || gray.height+padding != binary.height ) {\n\t\t\t\tthrow new IllegalArgumentException(\"Including padding, expected a binary image with shape \"\n\t\t\t\t+ (gray.width+padding)+\"x\"+(gray.height+padding));\n\t\t\t}\n\t\t} else {\n\t\t\tInputSanityCheck.checkSameShape(binary, gray);\n\t\t}\n\t\tif( imageWidth != gray.width || imageHeight != gray.height )\n\t\t\tconfigure(gray.width,gray.height);\n\n\t\t// reset storage for output. Call reset individually here to ensure that all references\n\t\t// are nulled from last time\n\t\tfor (int i = 0; i < foundInfo.size; i++) {\n\t\t\tfoundInfo.get(i).reset();\n\t\t}\n\t\tfoundInfo.reset();\n\n\t\tif( contourEdgeIntensity != null )\n\t\t\tcontourEdgeIntensity.setImage(gray);\n\n\t\tlong time0 = System.nanoTime();\n\n\t\t// find all the contours\n\t\tcontourFinder.process(binary);\n\n\t\tlong time1 = System.nanoTime();\n\n\t\t// Using the contours find the polygons\n\t\tfindCandidateShapes();\n\n\t\tlong time2 = System.nanoTime();\n\n\t\tdouble a = (time1-time0)*1e-6;\n\t\tdouble b = (time2-time1)*1e-6;\n\n\t\tmilliContour.update(a);\n\t\tmilliShapes.update(b);\n\n\t\tif( verbose ) System.out.println(\"EXIT  DetectPolygonFromContour.process()\");\n\t}", "src_javadoc": "Examines the undistorted gray scake input image for squares.", "dst_javadoc": "Examines the undistorted gray scale input image for squares. If p", "code_change_seq": [["public", "public", "equal"], ["void", "void", "equal"], ["process", "process", "equal"], ["(", "(", "equal"], ["T", "T", "equal"], ["gray", "gray", "equal"], [",", ",", "equal"], ["Gray", "Gray", "equal"], ["<con>", "<con>", "equal"], ["U8", "U8", "equal"], ["binary", "binary", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["verbose", "verbose", "equal"], [")", ")", "equal"], ["System", "System", "equal"], [".", ".", "equal"], ["out", "out", "equal"], [".", ".", "equal"], ["println", "println", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["ENTER", "ENTER", "equal"], ["Detect", "Detect", "equal"], ["<con>", "<con>", "equal"], ["Polygon", "Polygon", "equal"], ["<con>", "<con>", "equal"], ["From", "From", "equal"], ["<con>", "<con>", "equal"], ["Contour", "Contour", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"], ["<con>", "<con>", "equal"], ["process", "process", "equal"], ["<con>", "<con>", "equal"], ["(", "(", "equal"], ["<con>", "<con>", "equal"], [")", ")", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["", "if", "insert"], ["", "(", "insert"], ["", "contour", "insert"], ["", "<con>", "insert"], ["", "Padded", "insert"], ["", "!=", "insert"], ["", "null", "insert"], ["", "&&", "insert"], ["", "!", "insert"], ["", "contour", "insert"], ["", "<con>", "insert"], ["", "Padded", "insert"], ["", ".", "insert"], ["", "is", "insert"], ["", "<con>", "insert"], ["", "Create", "insert"], ["", "<con>", "insert"], ["", "Padded", "insert"], ["", "<con>", "insert"], ["", "Copy", "insert"], ["", "(", "insert"], ["", ")", "insert"], ["", ")", "insert"], ["", "{", "insert"], ["", "int", "insert"], ["", "padding", "insert"], ["", "=", "insert"], ["", "2", "insert"], ["", ";", "insert"], ["", "if", "insert"], ["", "(", "insert"], ["", "gray", "insert"], ["", ".", "insert"], ["", "width", "insert"], ["", "+", "insert"], ["", "padding", "insert"], ["", "!=", "insert"], ["", "binary", "insert"], ["", ".", "insert"], ["", "width", "insert"], ["", "||", "insert"], ["", "gray", "insert"], ["", ".", "insert"], ["", "height", "insert"], ["", "+", "insert"], ["", "padding", "insert"], ["", "!=", "insert"], ["", "binary", "insert"], ["", ".", "insert"], ["", "height", "insert"], ["", ")", "insert"], ["", "{", "insert"], ["", "throw", "insert"], ["", "new", "insert"], ["", "Illegal", "insert"], ["", "<con>", "insert"], ["", "Argument", "insert"], ["", "<con>", "insert"], ["", "Exception", "insert"], ["", "(", "insert"], ["", "\"", "insert"], ["", "Including", "insert"], ["", "padding", "insert"], ["", "<con>", "insert"], ["", ",", "insert"], ["", "expected", "insert"], ["", "a", "insert"], ["", "binary", "insert"], ["", "image", "insert"], ["", "with", "insert"], ["", "shape", "insert"], ["", "\"", "insert"], ["", "+", "insert"], ["", "(", "insert"], ["", "gray", "insert"], ["", ".", "insert"], ["", "width", "insert"], ["", "+", "insert"], ["", "padding", "insert"], ["", ")", "insert"], ["", "+", "insert"], ["", "\"", "insert"], ["", "x", "insert"], ["", "\"", "insert"], ["", "+", "insert"], ["", "(", "insert"], ["", "gray", "insert"], ["", ".", "insert"], ["", "height", "insert"], ["", "+", "insert"], ["", "padding", "insert"], ["", ")", "insert"], ["", ")", "insert"], ["", ";", "insert"], ["", "}", "insert"], ["", "}", "insert"], ["", "else", "insert"], ["", "{", "insert"], ["Input", "Input", "equal"], ["<con>", "<con>", "equal"], ["Sanity", "Sanity", "equal"], ["<con>", "<con>", "equal"], ["Check", "Check", "equal"], [".", ".", "equal"], ["check", "check", "equal"], ["<con>", "<con>", "equal"], ["Same", "Same", "equal"], ["<con>", "<con>", "equal"], ["Shape", "Shape", "equal"], ["(", "(", "equal"], ["binary", "binary", "equal"], [",", ",", "equal"], ["gray", "gray", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["", "}", "insert"], ["if", "if", "equal"], ["(", "(", "equal"], ["image", "image", "equal"], ["<con>", "<con>", "equal"], ["Width", "Width", "equal"], ["!=", "!=", "equal"], ["gray", "gray", "equal"], [".", ".", "equal"], ["width", "width", "equal"], ["||", "||", "equal"], ["image", "image", "equal"], ["<con>", "<con>", "equal"], ["Height", "Height", "equal"], ["!=", "!=", "equal"], ["gray", "gray", "equal"], [".", ".", "equal"], ["height", "height", "equal"], [")", ")", "equal"], ["configure", "configure", "equal"], ["(", "(", "equal"], ["gray", "gray", "equal"], [".", ".", "equal"], ["width", "width", "equal"], [",", ",", "equal"], ["gray", "gray", "equal"], [".", ".", "equal"], ["height", "height", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["for", "for", "equal"], ["(", "(", "equal"], ["int", "int", "equal"], ["i", "i", "equal"], ["=", "=", "equal"], ["0", "0", "equal"], [";", ";", "equal"], ["i", "i", "equal"], ["<", "<", "equal"], ["found", "found", "equal"], ["<con>", "<con>", "equal"], ["Info", "Info", "equal"], [".", ".", "equal"], ["size", "size", "equal"], [";", ";", "equal"], ["i", "i", "equal"], ["++", "++", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["found", "found", "equal"], ["<con>", "<con>", "equal"], ["Info", "Info", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["(", "(", "equal"], ["i", "i", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["reset", "reset", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["found", "found", "equal"], ["<con>", "<con>", "equal"], ["Info", "Info", "equal"], [".", ".", "equal"], ["reset", "reset", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["contour", "contour", "equal"], ["<con>", "<con>", "equal"], ["Edge", "Edge", "equal"], ["<con>", "<con>", "equal"], ["Intensity", "Intensity", "equal"], ["!=", "!=", "equal"], ["null", "null", "equal"], [")", ")", "equal"], ["contour", "contour", "equal"], ["<con>", "<con>", "equal"], ["Edge", "Edge", "equal"], ["<con>", "<con>", "equal"], ["Intensity", "Intensity", "equal"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Image", "Image", "equal"], ["(", "(", "equal"], ["gray", "gray", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["long", "long", "equal"], ["time0", "time0", "equal"], ["=", "=", "equal"], ["System", "System", "equal"], [".", ".", "equal"], ["nano", "nano", "equal"], ["<con>", "<con>", "equal"], ["Time", "Time", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["contour", "contour", "equal"], ["<con>", "<con>", "equal"], ["Finder", "Finder", "equal"], [".", ".", "equal"], ["process", "process", "equal"], ["(", "(", "equal"], ["binary", "binary", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["long", "long", "equal"], ["time1", "time1", "equal"], ["=", "=", "equal"], ["System", "System", "equal"], [".", ".", "equal"], ["nano", "nano", "equal"], ["<con>", "<con>", "equal"], ["Time", "Time", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["find", "find", "equal"], ["<con>", "<con>", "equal"], ["Candidate", "Candidate", "equal"], ["<con>", "<con>", "equal"], ["Shapes", "Shapes", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["long", "long", "equal"], ["time2", "time2", "equal"], ["=", "=", "equal"], ["System", "System", "equal"], [".", ".", "equal"], ["nano", "nano", "equal"], ["<con>", "<con>", "equal"], ["Time", "Time", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["double", "double", "equal"], ["a", "a", "equal"], ["=", "=", "equal"], ["(", "(", "equal"], ["time1", "time1", "equal"], ["-", "-", "equal"], ["time0", "time0", "equal"], [")", ")", "equal"], ["*", "*", "equal"], ["1e-6", "1e-6", "equal"], [";", ";", "equal"], ["double", "double", "equal"], ["b", "b", "equal"], ["=", "=", "equal"], ["(", "(", "equal"], ["time2", "time2", "equal"], ["-", "-", "equal"], ["time1", "time1", "equal"], [")", ")", "equal"], ["*", "*", "equal"], ["1e-6", "1e-6", "equal"], [";", ";", "equal"], ["milli", "milli", "equal"], ["<con>", "<con>", "equal"], ["Contour", "Contour", "equal"], [".", ".", "equal"], ["update", "update", "equal"], ["(", "(", "equal"], ["a", "a", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["milli", "milli", "equal"], ["<con>", "<con>", "equal"], ["Shapes", "Shapes", "equal"], [".", ".", "equal"], ["update", "update", "equal"], ["(", "(", "equal"], ["b", "b", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["verbose", "verbose", "equal"], [")", ")", "equal"], ["System", "System", "equal"], [".", ".", "equal"], ["out", "out", "equal"], [".", ".", "equal"], ["println", "println", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["EXIT", "EXIT", "equal"], ["Detect", "Detect", "equal"], ["<con>", "<con>", "equal"], ["Polygon", "Polygon", "equal"], ["<con>", "<con>", "equal"], ["From", "From", "equal"], ["<con>", "<con>", "equal"], ["Contour", "Contour", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"], ["<con>", "<con>", "equal"], ["process", "process", "equal"], ["<con>", "<con>", "equal"], ["(", "(", "equal"], ["<con>", "<con>", "equal"], [")", ")", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Examines the undistorted gray scake input image for squares.", "dst_desc": "Examines the undistorted gray scale input image for squares.", "src_desc_tokens": ["Examines", "the", "undistorted", "gray", "scake", "input", "image", "for", "squares", "<con>", "."], "dst_desc_tokens": ["Examines", "the", "undistorted", "gray", "scale", "input", "image", "for", "squares", "<con>", "."], "desc_change_seq": [["Examines", "Examines", "equal"], ["the", "the", "equal"], ["undistorted", "undistorted", "equal"], ["gray", "gray", "equal"], ["scake", "scale", "replace"], ["input", "input", "equal"], ["image", "image", "equal"], ["for", "for", "equal"], ["squares", "squares", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 1}
{"sample_id": 5075805, "full_name": "gridgain/gridgain", "commit_id": "45498109a47d740a4a4ee8aa9b312e53d095a16f", "src_method": "@ApiOperation(value = \"Save cluster basic configuration.\")\n    @PutMapping(path = \"/clusters/basic\", consumes = APPLICATION_JSON_VALUE)\n    public ResponseEntity<Void> saveBasicCluster(\n        @AuthenticationPrincipal Account acc,\n        @RequestHeader(value = \"demoMode\", defaultValue = \"false\") boolean demo,\n        @RequestBody JsonObject changedItems\n    ) {\n        cfgsSrv.saveBasicCluster(new ConfigurationKey(acc.getId(), demo), changedItems);\n\n        return ResponseEntity.ok().build();\n    }", "dst_method": "@PutMapping(path = \"/clusters/basic\", consumes = APPLICATION_JSON_VALUE)\n    public ResponseEntity<Void> saveBasicCluster(\n        @AuthenticationPrincipal Account acc,\n        @RequestHeader(value = \"demoMode\", defaultValue = \"false\") boolean demo,\n        @RequestBody JsonObject changedItems\n    ) {\n        cfgsSrv.saveBasicCluster(new ConfigurationKey(acc.getId(), demo), changedItems);\n\n        return ResponseEntity.ok().build();\n    }", "src_javadoc": "Save basic clusters.", "dst_javadoc": "Save cluster basic configuration.", "code_change_seq": [["@", "", "delete"], ["Api", "", "delete"], ["<con>", "", "delete"], ["Operation", "", "delete"], ["(", "", "delete"], ["value", "", "delete"], ["=", "", "delete"], ["\"", "", "delete"], ["Save", "", "delete"], ["cluster", "", "delete"], ["basic", "", "delete"], ["configuration", "", "delete"], ["<con>", "", "delete"], [".", "", "delete"], ["\"", "", "delete"], [")", "", "delete"], ["@", "@", "equal"], ["Put", "Put", "equal"], ["<con>", "<con>", "equal"], ["Mapping", "Mapping", "equal"], ["(", "(", "equal"], ["path", "path", "equal"], ["=", "=", "equal"], ["\"", "\"", "equal"], ["/", "/", "equal"], ["<con>", "<con>", "equal"], ["clusters", "clusters", "equal"], ["<con>", "<con>", "equal"], ["/", "/", "equal"], ["<con>", "<con>", "equal"], ["basic", "basic", "equal"], ["\"", "\"", "equal"], [",", ",", "equal"], ["consumes", "consumes", "equal"], ["=", "=", "equal"], ["APPLICATION", "APPLICATION", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["JSON", "JSON", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["VALUE", "VALUE", "equal"], [")", ")", "equal"], ["public", "public", "equal"], ["Response", "Response", "equal"], ["<con>", "<con>", "equal"], ["Entity", "Entity", "equal"], ["<", "<", "equal"], ["Void", "Void", "equal"], [">", ">", "equal"], ["save", "save", "equal"], ["<con>", "<con>", "equal"], ["Basic", "Basic", "equal"], ["<con>", "<con>", "equal"], ["Cluster", "Cluster", "equal"], ["(", "(", "equal"], ["@", "@", "equal"], ["Authentication", "Authentication", "equal"], ["<con>", "<con>", "equal"], ["Principal", "Principal", "equal"], ["Account", "Account", "equal"], ["acc", "acc", "equal"], [",", ",", "equal"], ["@", "@", "equal"], ["Request", "Request", "equal"], ["<con>", "<con>", "equal"], ["Header", "Header", "equal"], ["(", "(", "equal"], ["value", "value", "equal"], ["=", "=", "equal"], ["\"", "\"", "equal"], ["demo", "demo", "equal"], ["<con>", "<con>", "equal"], ["Mode", "Mode", "equal"], ["\"", "\"", "equal"], [",", ",", "equal"], ["default", "default", "equal"], ["<con>", "<con>", "equal"], ["Value", "Value", "equal"], ["=", "=", "equal"], ["\"", "\"", "equal"], ["false", "false", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], ["boolean", "boolean", "equal"], ["demo", "demo", "equal"], [",", ",", "equal"], ["@", "@", "equal"], ["Request", "Request", "equal"], ["<con>", "<con>", "equal"], ["Body", "Body", "equal"], ["Json", "Json", "equal"], ["<con>", "<con>", "equal"], ["Object", "Object", "equal"], ["changed", "changed", "equal"], ["<con>", "<con>", "equal"], ["Items", "Items", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["cfgs", "cfgs", "equal"], ["<con>", "<con>", "equal"], ["Srv", "Srv", "equal"], [".", ".", "equal"], ["save", "save", "equal"], ["<con>", "<con>", "equal"], ["Basic", "Basic", "equal"], ["<con>", "<con>", "equal"], ["Cluster", "Cluster", "equal"], ["(", "(", "equal"], ["new", "new", "equal"], ["Configuration", "Configuration", "equal"], ["<con>", "<con>", "equal"], ["Key", "Key", "equal"], ["(", "(", "equal"], ["acc", "acc", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Id", "Id", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["demo", "demo", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["changed", "changed", "equal"], ["<con>", "<con>", "equal"], ["Items", "Items", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["return", "return", "equal"], ["Response", "Response", "equal"], ["<con>", "<con>", "equal"], ["Entity", "Entity", "equal"], [".", ".", "equal"], ["ok", "ok", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["build", "build", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Save basic clusters.", "dst_desc": "Save cluster basic configuration.", "src_desc_tokens": ["Save", "basic", "clusters", "<con>", "."], "dst_desc_tokens": ["Save", "cluster", "basic", "configuration", "<con>", "."], "desc_change_seq": [["Save", "Save", "equal"], ["", "cluster", "insert"], ["basic", "basic", "equal"], ["clusters", "configuration", "replace"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 2}
{"sample_id": 668963, "full_name": "apache/geode", "commit_id": "384b8756092ea12f263bc99d9afedd690008ba68", "src_method": "private SSLConfig configureLegacyServerSSL(final DistributionConfig distributionConfig,\n      final SSLConfig sslConfig) {\n    sslConfig.setCiphers(distributionConfig.getServerSSLCiphers());\n    sslConfig.setEnabled(distributionConfig.getServerSSLEnabled());\n    sslConfig.setKeystore(distributionConfig.getServerSSLKeyStore());\n    sslConfig.setKeystorePassword(distributionConfig.getServerSSLKeyStorePassword());\n    sslConfig.setKeystoreType(distributionConfig.getServerSSLKeyStoreType());\n    sslConfig.setTruststore(distributionConfig.getServerSSLTrustStore());\n    sslConfig.setTruststorePassword(distributionConfig.getServerSSLTrustStorePassword());\n    sslConfig.setTruststoreType(distributionConfig.getServerSSLKeyStoreType());\n    sslConfig.setProtocols(distributionConfig.getServerSSLProtocols());\n    sslConfig.setRequireAuth(distributionConfig.getServerSSLRequireAuthentication());\n    return sslConfig;\n  }", "dst_method": "private SSLConfig.Builder configureLegacyServerSSL(final DistributionConfig distributionConfig,\n      final SSLConfig.Builder sslConfigBuilder) {\n    sslConfigBuilder.setCiphers(distributionConfig.getServerSSLCiphers());\n    sslConfigBuilder.setEnabled(distributionConfig.getServerSSLEnabled());\n    sslConfigBuilder.setKeystore(distributionConfig.getServerSSLKeyStore());\n    sslConfigBuilder.setKeystorePassword(distributionConfig.getServerSSLKeyStorePassword());\n    sslConfigBuilder.setKeystoreType(distributionConfig.getServerSSLKeyStoreType());\n    sslConfigBuilder.setTruststore(distributionConfig.getServerSSLTrustStore());\n    sslConfigBuilder.setTruststorePassword(distributionConfig.getServerSSLTrustStorePassword());\n    sslConfigBuilder.setTruststoreType(distributionConfig.getServerSSLKeyStoreType());\n    sslConfigBuilder.setProtocols(distributionConfig.getServerSSLProtocols());\n    sslConfigBuilder.setRequireAuth(distributionConfig.getServerSSLRequireAuthentication());\n    return sslConfigBuilder;\n  }", "src_javadoc": "Configure a sslConfig for the server using the legacy configuration", "dst_javadoc": "Configure a SSLConfig.Builder for the server using the legacy configuration", "code_change_seq": [["private", "private", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", ".", "insert"], ["", "Builder", "insert"], ["configure", "configure", "equal"], ["<con>", "<con>", "equal"], ["Legacy", "Legacy", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["(", "(", "equal"], ["final", "final", "equal"], ["Distribution", "Distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [",", ",", "equal"], ["final", "final", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", ".", "insert"], ["", "Builder", "insert"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [")", ")", "equal"], ["{", "{", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Ciphers", "Ciphers", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Ciphers", "Ciphers", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Enabled", "Enabled", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Enabled", "Enabled", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Keystore", "Keystore", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Keystore", "Keystore", "equal"], ["<con>", "<con>", "equal"], ["Password", "Password", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["<con>", "<con>", "equal"], ["Password", "Password", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Keystore", "Keystore", "equal"], ["<con>", "<con>", "equal"], ["Type", "Type", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["<con>", "<con>", "equal"], ["Type", "Type", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Truststore", "Truststore", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Trust", "Trust", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Truststore", "Truststore", "equal"], ["<con>", "<con>", "equal"], ["Password", "Password", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Trust", "Trust", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["<con>", "<con>", "equal"], ["Password", "Password", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Truststore", "Truststore", "equal"], ["<con>", "<con>", "equal"], ["Type", "Type", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Store", "Store", "equal"], ["<con>", "<con>", "equal"], ["Type", "Type", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Protocols", "Protocols", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Protocols", "Protocols", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Require", "Require", "equal"], ["<con>", "<con>", "equal"], ["Auth", "Auth", "equal"], ["(", "(", "equal"], ["distribution", "distribution", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Server", "Server", "equal"], ["<con>", "<con>", "equal"], ["SSL", "SSL", "equal"], ["<con>", "<con>", "equal"], ["Require", "Require", "equal"], ["<con>", "<con>", "equal"], ["Authentication", "Authentication", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["return", "return", "equal"], ["ssl", "ssl", "equal"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", "Builder", "insert"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Configure a sslConfig for the server using the legacy configuration", "dst_desc": "Configure a SSLConfig.Builder for the server using the legacy configuration", "src_desc_tokens": ["Configure", "a", "ssl", "<con>", "Config", "for", "the", "server", "using", "the", "legacy", "configuration"], "dst_desc_tokens": ["Configure", "a", "SSL", "<con>", "Config", "<con>", ".", "<con>", "Builder", "for", "the", "server", "using", "the", "legacy", "configuration"], "desc_change_seq": [["Configure", "Configure", "equal"], ["a", "a", "equal"], ["ssl", "SSL", "replace"], ["<con>", "<con>", "equal"], ["Config", "Config", "equal"], ["", "<con>", "insert"], ["", ".", "insert"], ["", "<con>", "insert"], ["", "Builder", "insert"], ["for", "for", "equal"], ["the", "the", "equal"], ["server", "server", "equal"], ["using", "using", "equal"], ["the", "the", "equal"], ["legacy", "legacy", "equal"], ["configuration", "configuration", "equal"]], "dist": 5}

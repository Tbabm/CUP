{"sample_id": 3055905, "full_name": "opennetworkinglab/onos", "commit_id": "4ae5aa8b207090bfc9776dd802d4ada04b732d00", "src_method": "public Interface getInterface() {\n        return theInterface;\n    }", "dst_method": "public Interface getInterface() {\n        return this.onosInterface;\n    }", "src_javadoc": "Get the PIM Interface.", "dst_javadoc": "Return the ONOS Interface.", "code_change_seq": [["public", "public", "equal"], ["Interface", "Interface", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Interface", "Interface", "equal"], ["(", "(", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["", "this", "insert"], ["", ".", "insert"], ["the", "onos", "replace"], ["<con>", "<con>", "equal"], ["Interface", "Interface", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Get the PIM Interface.", "dst_desc": "Return the ONOS Interface.", "src_desc_tokens": ["Get", "the", "PIM", "Interface", "<con>", "."], "dst_desc_tokens": ["Return", "the", "ONOS", "Interface", "<con>", "."], "desc_change_seq": [["Get", "Return", "replace"], ["the", "the", "equal"], ["PIM", "ONOS", "replace"], ["Interface", "Interface", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 2}
{"sample_id": 2571481, "full_name": "kaaproject/kaa", "commit_id": "5c56e1972ed0201beb4f41f1d98a89e1cd03cda6", "src_method": "@RequestMapping(value = \"CTLSchemas\", method = RequestMethod.POST)\n    public List<CTLSchemaDto> getCTLSchemasByFqn(@RequestParam(value = \"fqn\") String fqn) throws KaaAdminServiceException {\n        return kaaAdminService.getCTLSchemasByFqn(fqn);\n    }", "dst_method": "@RequestMapping(value = \"CTLSchema\", method = RequestMethod.GET)\n    @ResponseBody\n    public List<CTLSchemaDto> getCTLSchemasByFqn(@RequestParam(value = \"fqn\") String fqn) throws KaaAdminServiceException {\n        return kaaAdminService.getCTLSchemasByFqn(fqn);\n    }", "src_javadoc": "Gets CTL schemas with the given fully qualified name.", "dst_javadoc": "Gets CTL schemas by their shared fully qualified name.", "code_change_seq": [["@", "@", "equal"], ["Request", "Request", "equal"], ["<con>", "<con>", "equal"], ["Mapping", "Mapping", "equal"], ["(", "(", "equal"], ["value", "value", "equal"], ["=", "=", "equal"], ["\"", "\"", "equal"], ["CTL", "CTL", "equal"], ["<con>", "<con>", "equal"], ["Schemas", "Schema", "replace"], ["\"", "\"", "equal"], [",", ",", "equal"], ["method", "method", "equal"], ["=", "=", "equal"], ["Request", "Request", "equal"], ["<con>", "<con>", "equal"], ["Method", "Method", "equal"], [".", ".", "equal"], ["POST", "GET", "replace"], [")", ")", "equal"], ["", "@", "insert"], ["", "Response", "insert"], ["", "<con>", "insert"], ["", "Body", "insert"], ["public", "public", "equal"], ["List", "List", "equal"], ["<", "<", "equal"], ["CTL", "CTL", "equal"], ["<con>", "<con>", "equal"], ["Schema", "Schema", "equal"], ["<con>", "<con>", "equal"], ["Dto", "Dto", "equal"], [">", ">", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["CTL", "CTL", "equal"], ["<con>", "<con>", "equal"], ["Schemas", "Schemas", "equal"], ["<con>", "<con>", "equal"], ["By", "By", "equal"], ["<con>", "<con>", "equal"], ["Fqn", "Fqn", "equal"], ["(", "(", "equal"], ["@", "@", "equal"], ["Request", "Request", "equal"], ["<con>", "<con>", "equal"], ["Param", "Param", "equal"], ["(", "(", "equal"], ["value", "value", "equal"], ["=", "=", "equal"], ["\"", "\"", "equal"], ["fqn", "fqn", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], ["String", "String", "equal"], ["fqn", "fqn", "equal"], [")", ")", "equal"], ["throws", "throws", "equal"], ["Kaa", "Kaa", "equal"], ["<con>", "<con>", "equal"], ["Admin", "Admin", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["kaa", "kaa", "equal"], ["<con>", "<con>", "equal"], ["Admin", "Admin", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["CTL", "CTL", "equal"], ["<con>", "<con>", "equal"], ["Schemas", "Schemas", "equal"], ["<con>", "<con>", "equal"], ["By", "By", "equal"], ["<con>", "<con>", "equal"], ["Fqn", "Fqn", "equal"], ["(", "(", "equal"], ["fqn", "fqn", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Gets CTL schemas with the given fully qualified name.", "dst_desc": "Gets CTL schemas by their shared fully qualified name.", "src_desc_tokens": ["Gets", "CTL", "schemas", "with", "the", "given", "fully", "qualified", "name", "<con>", "."], "dst_desc_tokens": ["Gets", "CTL", "schemas", "by", "their", "shared", "fully", "qualified", "name", "<con>", "."], "desc_change_seq": [["Gets", "Gets", "equal"], ["CTL", "CTL", "equal"], ["schemas", "schemas", "equal"], ["with", "by", "replace"], ["the", "their", "replace"], ["given", "shared", "replace"], ["fully", "fully", "equal"], ["qualified", "qualified", "equal"], ["name", "name", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 3}
{"sample_id": 5552502, "full_name": "unofficial-openjdk/openjdk", "commit_id": "4cb2ac82d248a1cd62bf2272649576e3bbca4951", "src_method": "private static void writeKtab0(String tab, boolean append, KDC... kdcs)\n            throws IOException, KrbException {\n        KeyTab ktab = append ? KeyTab.getInstance(tab) : KeyTab.create(tab);\n        for (KDC kdc: kdcs) {\n            for (String name : kdc.passwords.keySet()) {\n                char[] pass = kdc.passwords.get(name);\n                int kvno = 0;\n                if (Character.isDigit(pass[pass.length-1])) {\n                    kvno = pass[pass.length-1] - '0';\n                }\n                ktab.addEntry(new PrincipalName(name,\n                        name.indexOf('/') < 0 ?\n                            PrincipalName.KRB_NT_UNKNOWN :\n                            PrincipalName.KRB_NT_SRV_HST),\n                            pass,\n                            kvno,\n                            true);\n            }\n        }\n        ktab.save();\n    }", "dst_method": "public void writeKtab(String tab, boolean append, String... names)\n            throws IOException, KrbException {\n        KeyTab ktab = append ? KeyTab.getInstance(tab) : KeyTab.create(tab);\n        Iterable<String> entries =\n                (names.length != 0) ? Arrays.asList(names): passwords.keySet();\n        for (String name : entries) {\n            char[] pass = passwords.get(name);\n            int kvno = 0;\n            if (Character.isDigit(pass[pass.length-1])) {\n                kvno = pass[pass.length-1] - '0';\n            }\n            ktab.addEntry(new PrincipalName(name,\n                    name.indexOf('/') < 0 ?\n                        PrincipalName.KRB_NT_UNKNOWN :\n                        PrincipalName.KRB_NT_SRV_HST),\n                        pass,\n                        kvno,\n                        true);\n        }\n        ktab.save();\n    }", "src_javadoc": "Writes or appends KDC keys into a keytab. See doc for writeMultiKtab.", "dst_javadoc": "Writes or appends keys into a keytab.\n\nAttention: This is the most basic one of a series of methods below on\nkeytab creation or modification. All these methods reference krb5.conf\nsettings. If you need to modify krb5.conf or switch to another krb5.conf\nlater, please call  again. For example:\n\nInside this method there are 2 places krb5.conf is used:\n\n (Fatal) Generating keys: EncryptionKey.acquireSecretKeys\n (Has workaround) Creating PrincipalName", "code_change_seq": [["private", "", "delete"], ["static", "public", "replace"], ["void", "void", "equal"], ["write", "write", "equal"], ["<con>", "<con>", "equal"], ["Ktab0", "Ktab", "replace"], ["(", "(", "equal"], ["String", "String", "equal"], ["tab", "tab", "equal"], [",", ",", "equal"], ["boolean", "boolean", "equal"], ["append", "append", "equal"], [",", ",", "equal"], ["KDC", "String", "replace"], ["...", "...", "equal"], ["kdcs", "names", "replace"], [")", ")", "equal"], ["throws", "throws", "equal"], ["IO", "IO", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], [",", ",", "equal"], ["Krb", "Krb", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["{", "{", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Tab", "Tab", "equal"], ["ktab", "ktab", "equal"], ["=", "=", "equal"], ["append", "append", "equal"], ["?", "?", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Tab", "Tab", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Instance", "Instance", "equal"], ["(", "(", "equal"], ["tab", "tab", "equal"], [")", ")", "equal"], [":", ":", "equal"], ["Key", "Key", "equal"], ["<con>", "<con>", "equal"], ["Tab", "Tab", "equal"], [".", ".", "equal"], ["create", "create", "equal"], ["(", "(", "equal"], ["tab", "tab", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["for", "Iterable", "replace"], ["", "<", "insert"], ["", "String", "insert"], ["", ">", "insert"], ["", "entries", "insert"], ["", "=", "insert"], ["(", "(", "equal"], ["KDC", "names", "replace"], ["kdc", ".", "replace"], ["", "length", "insert"], ["", "!=", "insert"], ["", "0", "insert"], ["", ")", "insert"], ["", "?", "insert"], ["", "Arrays", "insert"], ["", ".", "insert"], ["", "as", "insert"], ["", "<con>", "insert"], ["", "List", "insert"], ["", "(", "insert"], ["", "names", "insert"], ["", ")", "insert"], [":", ":", "equal"], ["kdcs", "passwords", "replace"], ["", ".", "insert"], ["", "key", "insert"], ["", "<con>", "insert"], ["", "Set", "insert"], ["", "(", "insert"], [")", ")", "equal"], ["{", ";", "replace"], ["for", "for", "equal"], ["(", "(", "equal"], ["String", "String", "equal"], ["name", "name", "equal"], [":", ":", "equal"], ["kdc", "entries", "replace"], [".", "", "delete"], ["passwords", "", "delete"], [".", "", "delete"], ["key", "", "delete"], ["<con>", "", "delete"], ["Set", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", ")", "equal"], ["{", "{", "equal"], ["char", "char", "equal"], ["[", "[", "equal"], ["]", "]", "equal"], ["pass", "pass", "equal"], ["=", "=", "equal"], ["kdc", "", "delete"], [".", "", "delete"], ["passwords", "passwords", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["(", "(", "equal"], ["name", "name", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["int", "int", "equal"], ["kvno", "kvno", "equal"], ["=", "=", "equal"], ["0", "0", "equal"], [";", ";", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["Character", "Character", "equal"], [".", ".", "equal"], ["is", "is", "equal"], ["<con>", "<con>", "equal"], ["Digit", "Digit", "equal"], ["(", "(", "equal"], ["pass", "pass", "equal"], ["[", "[", "equal"], ["pass", "pass", "equal"], [".", ".", "equal"], ["length", "length", "equal"], ["-", "-", "equal"], ["1", "1", "equal"], ["]", "]", "equal"], [")", ")", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["kvno", "kvno", "equal"], ["=", "=", "equal"], ["pass", "pass", "equal"], ["[", "[", "equal"], ["pass", "pass", "equal"], [".", ".", "equal"], ["length", "length", "equal"], ["-", "-", "equal"], ["1", "1", "equal"], ["]", "]", "equal"], ["-", "-", "equal"], ["'0'", "'0'", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["ktab", "ktab", "equal"], [".", ".", "equal"], ["add", "add", "equal"], ["<con>", "<con>", "equal"], ["Entry", "Entry", "equal"], ["(", "(", "equal"], ["new", "new", "equal"], ["Principal", "Principal", "equal"], ["<con>", "<con>", "equal"], ["Name", "Name", "equal"], ["(", "(", "equal"], ["name", "name", "equal"], [",", ",", "equal"], ["name", "name", "equal"], [".", ".", "equal"], ["index", "index", "equal"], ["<con>", "<con>", "equal"], ["Of", "Of", "equal"], ["(", "(", "equal"], ["'/'", "'/'", "equal"], [")", ")", "equal"], ["<", "<", "equal"], ["0", "0", "equal"], ["?", "?", "equal"], ["Principal", "Principal", "equal"], ["<con>", "<con>", "equal"], ["Name", "Name", "equal"], [".", ".", "equal"], ["KRB", "KRB", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["NT", "NT", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["UNKNOWN", "UNKNOWN", "equal"], [":", ":", "equal"], ["Principal", "Principal", "equal"], ["<con>", "<con>", "equal"], ["Name", "Name", "equal"], [".", ".", "equal"], ["KRB", "KRB", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["NT", "NT", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["SRV", "SRV", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["<con>", "<con>", "equal"], ["HST", "HST", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["pass", "pass", "equal"], [",", ",", "equal"], ["kvno", "kvno", "equal"], [",", ",", "equal"], ["true", "true", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["}", "", "delete"], ["ktab", "ktab", "equal"], [".", ".", "equal"], ["save", "save", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Writes or appends KDC keys into a keytab.", "dst_desc": "Writes or appends keys into a keytab.", "src_desc_tokens": ["Writes", "or", "appends", "KDC", "keys", "into", "a", "keytab", "<con>", "."], "dst_desc_tokens": ["Writes", "or", "appends", "keys", "into", "a", "keytab", "<con>", "."], "desc_change_seq": [["Writes", "Writes", "equal"], ["or", "or", "equal"], ["appends", "appends", "equal"], ["KDC", "", "delete"], ["keys", "keys", "equal"], ["into", "into", "equal"], ["a", "a", "equal"], ["keytab", "keytab", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 1}
{"sample_id": 3246481, "full_name": "plutext/docx4j", "commit_id": "96e616b8e5740b47a4d644228713d0c9755810bc", "src_method": "public List<Object> getCustomXmlOrSmartTagOrSdt() {\n        if (customXmlOrSmartTagOrSdt == null) {\n            customXmlOrSmartTagOrSdt = new ArrayList<Object>();\n        }\n        return this.customXmlOrSmartTagOrSdt;\n    }", "dst_method": "public List<Object> getAccOrBarOrBox() {\n        if (accOrBarOrBox == null) {\n            accOrBarOrBox = new ArrayList<Object>();\n        }\n        return this.accOrBarOrBox;\n    }", "src_javadoc": "Gets the value of the customXmlOrSmartTagOrSdt property.\n\n\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a set method for the customXmlOrSmartTagOrSdt property.\n\n\nFor example, to add a new item, do as follows:\n\n\n\nObjects of the following type(s) are allowed in the list\n{@link RunDel }\n{@link JAXBElement }{@code <}{@link CTBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link R }\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTPerm }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTSmartTagRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link ProofErr }\n{@link JAXBElement }{@code <}{@link RangePermissionStart }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link SdtRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTCustomXmlRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link CommentRangeStart }\n{@link CommentRangeEnd }\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link RunIns }", "dst_javadoc": "Gets the value of the accOrBarOrBox property.\n\n\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a set method for the accOrBarOrBox property.\n\n\nFor example, to add a new item, do as follows:\n\n\n\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTEqArr }{@code >}\n{@link JAXBElement }{@code <}{@link CTBar }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link R }\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link SdtRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTLimUpp }{@code >}\n{@link JAXBElement }{@code <}{@link CTFunc }{@code >}\n{@link JAXBElement }{@code <}{@link CTF }{@code >}\n{@link JAXBElement }{@code <}{@link CTRad }{@code >}\n{@link JAXBElement }{@code <}{@link CTPhant }{@code >}\n{@link CommentRangeStart }\n{@link JAXBElement }{@code <}{@link CTM }{@code >}\n{@link JAXBElement }{@code <}{@link CTBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTAcc }{@code >}\n{@link JAXBElement }{@code <}{@link CTSSup }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTBorderBox }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTLimLow }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTR }{@code >}\n{@link JAXBElement }{@code <}{@link CTCustomXmlRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTSSubSup }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link RunDel }\n{@link JAXBElement }{@code <}{@link CTD }{@code >}\n{@link JAXBElement }{@code <}{@link CTGroupChr }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link RangePermissionStart }{@code >}\n{@link ProofErr }\n{@link JAXBElement }{@code <}{@link CTNary }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTSPre }{@code >}\n{@link CommentRangeEnd }\n{@link JAXBElement }{@code <}{@link CTSmartTagRun }{@code >}\n{@link RunIns }\n{@link JAXBElement }{@code <}{@link CTSSub }{@code >}\n{@link JAXBElement }{@code <}{@link CTBox }{@code >}\n{@link JAXBElement }{@code <}{@link CTPerm }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}", "code_change_seq": [["public", "public", "equal"], ["List", "List", "equal"], ["<", "<", "equal"], ["Object", "Object", "equal"], [">", ">", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Custom", "Acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["(", "(", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["==", "==", "equal"], ["null", "null", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["=", "=", "equal"], ["new", "new", "equal"], ["Array", "Array", "equal"], ["<con>", "<con>", "equal"], ["List", "List", "equal"], ["<", "<", "equal"], ["Object", "Object", "equal"], [">", ">", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["return", "return", "equal"], ["this", "this", "equal"], [".", ".", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Gets the value of the customXmlOrSmartTagOrSdt property.", "dst_desc": "Gets the value of the accOrBarOrBox property.", "src_desc_tokens": ["Gets", "the", "value", "of", "the", "custom", "<con>", "Xml", "<con>", "Or", "<con>", "Smart", "<con>", "Tag", "<con>", "Or", "<con>", "Sdt", "property", "<con>", "."], "dst_desc_tokens": ["Gets", "the", "value", "of", "the", "acc", "<con>", "Or", "<con>", "Bar", "<con>", "Or", "<con>", "Box", "property", "<con>", "."], "desc_change_seq": [["Gets", "Gets", "equal"], ["the", "the", "equal"], ["value", "value", "equal"], ["of", "of", "equal"], ["the", "the", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["property", "property", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 7}
{"sample_id": 3246481, "full_name": "plutext/docx4j", "commit_id": "96e616b8e5740b47a4d644228713d0c9755810bc", "src_method": "public List<Object> getCustomXmlOrSmartTagOrSdt() {\n        if (customXmlOrSmartTagOrSdt == null) {\n            customXmlOrSmartTagOrSdt = new ArrayList<Object>();\n        }\n        return this.customXmlOrSmartTagOrSdt;\n    }", "dst_method": "public List<Object> getAccOrBarOrBox() {\n        if (accOrBarOrBox == null) {\n            accOrBarOrBox = new ArrayList<Object>();\n        }\n        return this.accOrBarOrBox;\n    }", "src_javadoc": "Gets the value of the customXmlOrSmartTagOrSdt property.\n\n\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a set method for the customXmlOrSmartTagOrSdt property.\n\n\nFor example, to add a new item, do as follows:\n\n\n\nObjects of the following type(s) are allowed in the list\n{@link RunDel }\n{@link JAXBElement }{@code <}{@link CTBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link R }\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTPerm }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTSmartTagRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link ProofErr }\n{@link JAXBElement }{@code <}{@link RangePermissionStart }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link SdtRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTCustomXmlRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link CommentRangeStart }\n{@link CommentRangeEnd }\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link RunIns }", "dst_javadoc": "Gets the value of the accOrBarOrBox property.\n\n\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a set method for the accOrBarOrBox property.\n\n\nFor example, to add a new item, do as follows:\n\n\n\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTEqArr }{@code >}\n{@link JAXBElement }{@code <}{@link CTBar }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link R }\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link SdtRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTLimUpp }{@code >}\n{@link JAXBElement }{@code <}{@link CTFunc }{@code >}\n{@link JAXBElement }{@code <}{@link CTF }{@code >}\n{@link JAXBElement }{@code <}{@link CTRad }{@code >}\n{@link JAXBElement }{@code <}{@link CTPhant }{@code >}\n{@link CommentRangeStart }\n{@link JAXBElement }{@code <}{@link CTM }{@code >}\n{@link JAXBElement }{@code <}{@link CTBookmark }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTAcc }{@code >}\n{@link JAXBElement }{@code <}{@link CTSSup }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link CTBorderBox }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTLimLow }{@code >}\n{@link JAXBElement }{@code <}{@link RunTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTR }{@code >}\n{@link JAXBElement }{@code <}{@link CTCustomXmlRun }{@code >}\n{@link JAXBElement }{@code <}{@link CTSSubSup }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}\n{@link RunDel }\n{@link JAXBElement }{@code <}{@link CTD }{@code >}\n{@link JAXBElement }{@code <}{@link CTGroupChr }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkup }{@code >}\n{@link JAXBElement }{@code <}{@link RangePermissionStart }{@code >}\n{@link ProofErr }\n{@link JAXBElement }{@code <}{@link CTNary }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTTrackChange }{@code >}\n{@link JAXBElement }{@code <}{@link CTSPre }{@code >}\n{@link CommentRangeEnd }\n{@link JAXBElement }{@code <}{@link CTSmartTagRun }{@code >}\n{@link RunIns }\n{@link JAXBElement }{@code <}{@link CTSSub }{@code >}\n{@link JAXBElement }{@code <}{@link CTBox }{@code >}\n{@link JAXBElement }{@code <}{@link CTPerm }{@code >}\n{@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}\n{@link JAXBElement }{@code <}{@link CTMoveBookmark }{@code >}", "code_change_seq": [["public", "public", "equal"], ["List", "List", "equal"], ["<", "<", "equal"], ["Object", "Object", "equal"], [">", ">", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Custom", "Acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["(", "(", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["==", "==", "equal"], ["null", "null", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["=", "=", "equal"], ["new", "new", "equal"], ["Array", "Array", "equal"], ["<con>", "<con>", "equal"], ["List", "List", "equal"], ["<", "<", "equal"], ["Object", "Object", "equal"], [">", ">", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["return", "return", "equal"], ["this", "this", "equal"], [".", ".", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 3, "src_desc": "This is why there is not a set method for the customXmlOrSmartTagOrSdt property.", "dst_desc": "This is why there is not a set method for the accOrBarOrBox property.", "src_desc_tokens": ["This", "is", "why", "there", "is", "not", "a", "set", "method", "for", "the", "custom", "<con>", "Xml", "<con>", "Or", "<con>", "Smart", "<con>", "Tag", "<con>", "Or", "<con>", "Sdt", "property", "<con>", "."], "dst_desc_tokens": ["This", "is", "why", "there", "is", "not", "a", "set", "method", "for", "the", "acc", "<con>", "Or", "<con>", "Bar", "<con>", "Or", "<con>", "Box", "property", "<con>", "."], "desc_change_seq": [["This", "This", "equal"], ["is", "is", "equal"], ["why", "why", "equal"], ["there", "there", "equal"], ["is", "is", "equal"], ["not", "not", "equal"], ["a", "a", "equal"], ["set", "set", "equal"], ["method", "method", "equal"], ["for", "for", "equal"], ["the", "the", "equal"], ["custom", "acc", "replace"], ["<con>", "", "delete"], ["Xml", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Smart", "Bar", "replace"], ["<con>", "", "delete"], ["Tag", "", "delete"], ["<con>", "<con>", "equal"], ["Or", "Or", "equal"], ["<con>", "<con>", "equal"], ["Sdt", "Box", "replace"], ["property", "property", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 7}
{"sample_id": 5067966, "full_name": "google/truth", "commit_id": "30b331dd68c506662c6c76f81fadf9c664fb6bb0", "src_method": "public final <CustomSubjectBuilderT extends CustomSubjectBuilder> CustomSubjectBuilderT about(\n      CustomSubjectBuilderFactory<CustomSubjectBuilderT> factory) {\n    return factory.createSubjectBuilder(failureStrategy());\n  }", "dst_method": "@Deprecated\n  public final <CustomSubjectBuilderT extends CustomSubjectBuilder> CustomSubjectBuilderT about(\n      CustomSubjectBuilderFactory<CustomSubjectBuilderT> factory) {\n    return factory.createSubjectBuilder(metadata().legacyStrategy());\n  }", "src_javadoc": "A generic, advanced method of extension of Truth to new types, which is documented on {@link\nCustomSubjectBuilder}. Extension creators should prefer {@link SubjectFactory} if possible.", "dst_javadoc": "A generic, advanced method of extension of Truth to new types, which is documented on {@link\nCustomSubjectBuilder}. Extension creators should prefer {@link Subject.Factory} if possible.", "code_change_seq": [["", "@", "insert"], ["", "Deprecated", "insert"], ["public", "public", "equal"], ["final", "final", "equal"], ["<", "<", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], ["extends", "extends", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], [">", ">", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], ["about", "about", "equal"], ["(", "(", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["Factory", "Factory", "equal"], ["<", "<", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], [">", ">", "equal"], ["factory", "factory", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["factory", "factory", "equal"], [".", ".", "equal"], ["create", "create", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["(", "(", "equal"], ["", "metadata", "insert"], ["", "(", "insert"], ["", ")", "insert"], ["", ".", "insert"], ["failure", "legacy", "replace"], ["<con>", "<con>", "equal"], ["Strategy", "Strategy", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 2, "src_desc": "Extension creators should prefer {@link SubjectFactory} if possible.", "dst_desc": "Extension creators should prefer {@link Subject.Factory} if possible.", "src_desc_tokens": ["Extension", "creators", "should", "prefer", "{", "<con>", "@", "<con>", "link", "Subject", "<con>", "Factory", "<con>", "}", "if", "possible", "<con>", "."], "dst_desc_tokens": ["Extension", "creators", "should", "prefer", "{", "<con>", "@", "<con>", "link", "Subject", "<con>", ".", "<con>", "Factory", "<con>", "}", "if", "possible", "<con>", "."], "desc_change_seq": [["Extension", "Extension", "equal"], ["creators", "creators", "equal"], ["should", "should", "equal"], ["prefer", "prefer", "equal"], ["{", "{", "equal"], ["<con>", "<con>", "equal"], ["@", "@", "equal"], ["<con>", "<con>", "equal"], ["link", "link", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["", ".", "insert"], ["", "<con>", "insert"], ["Factory", "Factory", "equal"], ["<con>", "<con>", "equal"], ["}", "}", "equal"], ["if", "if", "equal"], ["possible", "possible", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 2}
{"sample_id": 5067974, "full_name": "google/truth", "commit_id": "30b331dd68c506662c6c76f81fadf9c664fb6bb0", "src_method": "public static <CustomSubjectBuilderT extends CustomSubjectBuilder>\n      CustomSubjectBuilderT assertAbout(\n          CustomSubjectBuilderFactory<CustomSubjectBuilderT> factory) {\n    return assert_().about(factory);\n  }", "dst_method": "@Deprecated\n  public static <CustomSubjectBuilderT extends CustomSubjectBuilder>\n      CustomSubjectBuilderT assertAbout(\n          CustomSubjectBuilderFactory<CustomSubjectBuilderT> factory) {\n    return assert_().about(factory);\n  }", "src_javadoc": "A generic, advanced method of extension of Truth to new types, which is documented on {@link\nCustomSubjectBuilder}. Extension creators should prefer {@link SubjectFactory} if possible.", "dst_javadoc": "A generic, advanced method of extension of Truth to new types, which is documented on {@link\nCustomSubjectBuilder}. Extension creators should prefer {@link Subject.Factory} if possible.", "code_change_seq": [["", "@", "insert"], ["", "Deprecated", "insert"], ["public", "public", "equal"], ["static", "static", "equal"], ["<", "<", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], ["extends", "extends", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], [">", ">", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], ["assert", "assert", "equal"], ["<con>", "<con>", "equal"], ["About", "About", "equal"], ["(", "(", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["Factory", "Factory", "equal"], ["<", "<", "equal"], ["Custom", "Custom", "equal"], ["<con>", "<con>", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["<con>", "<con>", "equal"], ["T", "T", "equal"], [">", ">", "equal"], ["factory", "factory", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["assert", "assert", "equal"], ["<con>", "<con>", "equal"], ["_", "_", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["about", "about", "equal"], ["(", "(", "equal"], ["factory", "factory", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 2, "src_desc": "Extension creators should prefer {@link SubjectFactory} if possible.", "dst_desc": "Extension creators should prefer {@link Subject.Factory} if possible.", "src_desc_tokens": ["Extension", "creators", "should", "prefer", "{", "<con>", "@", "<con>", "link", "Subject", "<con>", "Factory", "<con>", "}", "if", "possible", "<con>", "."], "dst_desc_tokens": ["Extension", "creators", "should", "prefer", "{", "<con>", "@", "<con>", "link", "Subject", "<con>", ".", "<con>", "Factory", "<con>", "}", "if", "possible", "<con>", "."], "desc_change_seq": [["Extension", "Extension", "equal"], ["creators", "creators", "equal"], ["should", "should", "equal"], ["prefer", "prefer", "equal"], ["{", "{", "equal"], ["<con>", "<con>", "equal"], ["@", "@", "equal"], ["<con>", "<con>", "equal"], ["link", "link", "equal"], ["Subject", "Subject", "equal"], ["<con>", "<con>", "equal"], ["", ".", "insert"], ["", "<con>", "insert"], ["Factory", "Factory", "equal"], ["<con>", "<con>", "equal"], ["}", "}", "equal"], ["if", "if", "equal"], ["possible", "possible", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 2}
{"sample_id": 1379492, "full_name": "Audiveris/audiveris", "commit_id": "cb336dd255e591b7cc329520efe5427964941af0", "src_method": "public void stateChanged (ChangeEvent e)\n        {\n            logger.debug(\"stateChanged\");\n            ScrollView scrollView = getSelectedView();\n            RubberZoomedPanel view = scrollView.getView();\n\n            // Link rubber with right view\n            rubber.setComponent(view);\n            rubber.setMouseMonitor(view);\n\n            // Keep previous scroll bar positions\n            if (previousScrollView != null) {\n                scrollView.getVerticalScrollBar().setValue\n                    (previousScrollView.getVerticalScrollBar().getValue());\n                scrollView.getHorizontalScrollBar().setValue\n                    (previousScrollView.getHorizontalScrollBar().getValue());\n            }\n\n            // Restore proper boardspane\n            updateBoards();\n\n            previousScrollView = scrollView;\n        }", "dst_method": "public void stateChanged (ChangeEvent e)\n    {\n        logger.debug(\"stateChanged\");\n        ScrollView scrollView = getSelectedView();\n        RubberZoomedPanel view = scrollView.getView();\n\n        // Link rubber with proper view\n        rubber.setComponent(view);\n        rubber.setMouseMonitor(view);\n\n        // Keep previous scroll bar positions\n        if (previousScrollView != null) {\n            scrollView.getComponent().getVerticalScrollBar().setValue\n                (previousScrollView.getVerticalScrollBar().getValue());\n            scrollView.getComponent().getHorizontalScrollBar().setValue\n                (previousScrollView.getHorizontalScrollBar().getValue());\n        }\n\n        // Restore display of proper context\n        displayContext();\n\n        previousScrollView = scrollView.getComponent();\n    }", "src_javadoc": "This method is called whenever a view tab is selected in the\nSheet Assembly.", "dst_javadoc": "This method is called whenever a view tab is selected in the Sheet\nAssembly.", "code_change_seq": [["public", "public", "equal"], ["void", "void", "equal"], ["state", "state", "equal"], ["<con>", "<con>", "equal"], ["Changed", "Changed", "equal"], ["(", "(", "equal"], ["Change", "Change", "equal"], ["<con>", "<con>", "equal"], ["Event", "Event", "equal"], ["e", "e", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["logger", "logger", "equal"], [".", ".", "equal"], ["debug", "debug", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["state", "state", "equal"], ["<con>", "<con>", "equal"], ["Changed", "Changed", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["scroll", "scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["=", "=", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Selected", "Selected", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["Rubber", "Rubber", "equal"], ["<con>", "<con>", "equal"], ["Zoomed", "Zoomed", "equal"], ["<con>", "<con>", "equal"], ["Panel", "Panel", "equal"], ["view", "view", "equal"], ["=", "=", "equal"], ["scroll", "scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["rubber", "rubber", "equal"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Component", "Component", "equal"], ["(", "(", "equal"], ["view", "view", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["rubber", "rubber", "equal"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Mouse", "Mouse", "equal"], ["<con>", "<con>", "equal"], ["Monitor", "Monitor", "equal"], ["(", "(", "equal"], ["view", "view", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["if", "if", "equal"], ["(", "(", "equal"], ["previous", "previous", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["!=", "!=", "equal"], ["null", "null", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["scroll", "scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], [".", ".", "equal"], ["", "get", "insert"], ["", "<con>", "insert"], ["", "Component", "insert"], ["", "(", "insert"], ["", ")", "insert"], ["", ".", "insert"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Vertical", "Vertical", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["Bar", "Bar", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Value", "Value", "equal"], ["(", "(", "equal"], ["previous", "previous", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Vertical", "Vertical", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["Bar", "Bar", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Value", "Value", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["scroll", "scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], [".", ".", "equal"], ["", "get", "insert"], ["", "<con>", "insert"], ["", "Component", "insert"], ["", "(", "insert"], ["", ")", "insert"], ["", ".", "insert"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Horizontal", "Horizontal", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["Bar", "Bar", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Value", "Value", "equal"], ["(", "(", "equal"], ["previous", "previous", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Horizontal", "Horizontal", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["Bar", "Bar", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Value", "Value", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["update", "display", "replace"], ["<con>", "<con>", "equal"], ["Boards", "Context", "replace"], ["(", "(", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["previous", "previous", "equal"], ["<con>", "<con>", "equal"], ["Scroll", "Scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["=", "=", "equal"], ["scroll", "scroll", "equal"], ["<con>", "<con>", "equal"], ["View", "View", "equal"], ["", ".", "insert"], ["", "get", "insert"], ["", "<con>", "insert"], ["", "Component", "insert"], ["", "(", "insert"], ["", ")", "insert"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "This method is called whenever a view tab is selected in the", "dst_desc": "This method is called whenever a view tab is selected in the Sheet", "src_desc_tokens": ["This", "method", "is", "called", "whenever", "a", "view", "tab", "is", "selected", "in", "the"], "dst_desc_tokens": ["This", "method", "is", "called", "whenever", "a", "view", "tab", "is", "selected", "in", "the", "Sheet"], "desc_change_seq": [["This", "This", "equal"], ["method", "method", "equal"], ["is", "is", "equal"], ["called", "called", "equal"], ["whenever", "whenever", "equal"], ["a", "a", "equal"], ["view", "view", "equal"], ["tab", "tab", "equal"], ["is", "is", "equal"], ["selected", "selected", "equal"], ["in", "in", "equal"], ["the", "the", "equal"], ["", "Sheet", "insert"]], "dist": 1}

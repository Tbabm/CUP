{"sample_id": 5243791, "full_name": "sleuthkit/autopsy", "commit_id": "6130def6fda2188dcbf619612a7a1083385e233c", "src_method": "public static void writeCaseNodeData(CaseNodeData nodeData) throws CaseNodeDataException, InterruptedException {\n        try {\n            CoordinationService coordinationService = CoordinationService.getInstance();\n            coordinationService.setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n        } catch (IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to write case node data to %s\", nodeData.getDirectory().toString().toUpperCase()), ex); //NON-NLS\n        }\n    }", "dst_method": "public static void writeCaseNodeData(CaseNodeData nodeData) throws CaseNodeDataException, InterruptedException {\n        try {\n            CoordinationService.getInstance().setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n            \n        } catch (IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to write case node data to %s\", nodeData.getDirectory().toString().toUpperCase()), ex); //NON-NLS\n        }\n    }", "src_javadoc": "Writes updated case data to a case directory coordination service node.\nObtain the case data to be updated by calling createCaseNodeData() or\nreadCaseNodeData().", "dst_javadoc": "Writes case data to a case directory coordination service node. Obtain\nthe case data to be updated and written by calling createCaseNodeData()\nor readCaseNodeData().", "code_change_seq": [["public", "public", "equal"], ["static", "static", "equal"], ["void", "void", "equal"], ["write", "write", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [")", ")", "equal"], ["throws", "throws", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], [",", ",", "equal"], ["Interrupted", "Interrupted", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["{", "{", "equal"], ["try", "try", "equal"], ["{", "{", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], ["=", "", "delete"], ["Coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Instance", "Instance", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", "", "delete"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], [".", ".", "equal"], ["Category", "Category", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], [".", ".", "equal"], ["CASES", "CASES", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["String", "String", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Array", "Array", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["catch", "catch", "equal"], ["(", "(", "equal"], ["IO", "IO", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["|", "|", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["throw", "throw", "equal"], ["new", "new", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["(", "(", "equal"], ["String", "String", "equal"], [".", ".", "equal"], ["format", "format", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["Failed", "Failed", "equal"], ["to", "to", "equal"], ["write", "write", "equal"], ["case", "case", "equal"], ["node", "node", "equal"], ["data", "data", "equal"], ["to", "to", "equal"], ["%", "%", "equal"], ["<con>", "<con>", "equal"], ["s", "s", "equal"], ["\"", "\"", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["String", "String", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Upper", "Upper", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Writes updated case data to a case directory coordination service node.", "dst_desc": "Writes case data to a case directory coordination service node.", "src_desc_tokens": ["Writes", "updated", "case", "data", "to", "a", "case", "directory", "coordination", "service", "node", "<con>", "."], "dst_desc_tokens": ["Writes", "case", "data", "to", "a", "case", "directory", "coordination", "service", "node", "<con>", "."], "desc_change_seq": [["Writes", "Writes", "equal"], ["updated", "", "delete"], ["case", "case", "equal"], ["data", "data", "equal"], ["to", "to", "equal"], ["a", "a", "equal"], ["case", "case", "equal"], ["directory", "directory", "equal"], ["coordination", "coordination", "equal"], ["service", "service", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 1}
{"sample_id": 5243791, "full_name": "sleuthkit/autopsy", "commit_id": "6130def6fda2188dcbf619612a7a1083385e233c", "src_method": "public static void writeCaseNodeData(CaseNodeData nodeData) throws CaseNodeDataException, InterruptedException {\n        try {\n            CoordinationService coordinationService = CoordinationService.getInstance();\n            coordinationService.setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n        } catch (IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to write case node data to %s\", nodeData.getDirectory().toString().toUpperCase()), ex); //NON-NLS\n        }\n    }", "dst_method": "public static void writeCaseNodeData(CaseNodeData nodeData) throws CaseNodeDataException, InterruptedException {\n        try {\n            CoordinationService.getInstance().setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n            \n        } catch (IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to write case node data to %s\", nodeData.getDirectory().toString().toUpperCase()), ex); //NON-NLS\n        }\n    }", "src_javadoc": "Writes updated case data to a case directory coordination service node.\nObtain the case data to be updated by calling createCaseNodeData() or\nreadCaseNodeData().", "dst_javadoc": "Writes case data to a case directory coordination service node. Obtain\nthe case data to be updated and written by calling createCaseNodeData()\nor readCaseNodeData().", "code_change_seq": [["public", "public", "equal"], ["static", "static", "equal"], ["void", "void", "equal"], ["write", "write", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [")", ")", "equal"], ["throws", "throws", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], [",", ",", "equal"], ["Interrupted", "Interrupted", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["{", "{", "equal"], ["try", "try", "equal"], ["{", "{", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], ["=", "", "delete"], ["Coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Instance", "Instance", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", "", "delete"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], [".", ".", "equal"], ["Category", "Category", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], [".", ".", "equal"], ["CASES", "CASES", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["String", "String", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Array", "Array", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["catch", "catch", "equal"], ["(", "(", "equal"], ["IO", "IO", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["|", "|", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["throw", "throw", "equal"], ["new", "new", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["(", "(", "equal"], ["String", "String", "equal"], [".", ".", "equal"], ["format", "format", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["Failed", "Failed", "equal"], ["to", "to", "equal"], ["write", "write", "equal"], ["case", "case", "equal"], ["node", "node", "equal"], ["data", "data", "equal"], ["to", "to", "equal"], ["%", "%", "equal"], ["<con>", "<con>", "equal"], ["s", "s", "equal"], ["\"", "\"", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["String", "String", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Upper", "Upper", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["}", "}", "equal"]], "index": 1, "src_desc": "Obtain the case data to be updated by calling createCaseNodeData() or\nreadCaseNodeData().", "dst_desc": "Obtain\nthe case data to be updated and written by calling createCaseNodeData()\nor readCaseNodeData().", "src_desc_tokens": ["Obtain", "the", "case", "data", "to", "be", "updated", "by", "calling", "create", "<con>", "Case", "<con>", "Node", "<con>", "Data", "<con>", "(", "<con>", ")", "or", "read", "<con>", "Case", "<con>", "Node", "<con>", "Data", "<con>", "(", "<con>", ")", "<con>", "."], "dst_desc_tokens": ["Obtain", "the", "case", "data", "to", "be", "updated", "and", "written", "by", "calling", "create", "<con>", "Case", "<con>", "Node", "<con>", "Data", "<con>", "(", "<con>", ")", "or", "read", "<con>", "Case", "<con>", "Node", "<con>", "Data", "<con>", "(", "<con>", ")", "<con>", "."], "desc_change_seq": [["Obtain", "Obtain", "equal"], ["the", "the", "equal"], ["case", "case", "equal"], ["data", "data", "equal"], ["to", "to", "equal"], ["be", "be", "equal"], ["updated", "updated", "equal"], ["", "and", "insert"], ["", "written", "insert"], ["by", "by", "equal"], ["calling", "calling", "equal"], ["create", "create", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["(", "(", "equal"], ["<con>", "<con>", "equal"], [")", ")", "equal"], ["or", "or", "equal"], ["read", "read", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["(", "(", "equal"], ["<con>", "<con>", "equal"], [")", ")", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 2}
{"sample_id": 5243793, "full_name": "sleuthkit/autopsy", "commit_id": "6130def6fda2188dcbf619612a7a1083385e233c", "src_method": "public static CaseNodeData createCaseNodeData(CaseMetadata metadata) throws CaseNodeDataException, InterruptedException {\n        try {\n            CaseNodeData nodeData = new CaseNodeData(metadata);\n            CoordinationService coordinationService = CoordinationService.getInstance();\n            coordinationService.setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n            return nodeData;\n\n        } catch (ParseException | IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to create/write case node data for %s\", metadata.getCaseDirectory().toUpperCase()), ex); //NON-NLS\n        }\n    }", "dst_method": "public static CaseNodeData createCaseNodeData(final CaseMetadata metadata) throws CaseNodeDataException, InterruptedException {\n        try {\n            final CaseNodeData nodeData = new CaseNodeData(metadata);\n            CoordinationService.getInstance().setNodeData(CoordinationService.CategoryNode.CASES, nodeData.getDirectory().toString(), nodeData.toArray());\n            return nodeData;\n\n        } catch (ParseException | IOException | CoordinationServiceException ex) {\n            throw new CaseNodeDataException(String.format(\"Failed to create case node data for %s\", metadata.getCaseDirectory().toUpperCase()), ex); //NON-NLS\n        }\n    }", "src_javadoc": "Creates case node data from the metadata for a case and writes it to the\ncase directory coordination service node, which must already exist.", "dst_javadoc": "Creates case node data from the metadata for a case and writes it to the\nappropriate case directory coordination service node, which must already\nexist.", "code_change_seq": [["public", "public", "equal"], ["static", "static", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["create", "create", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["", "final", "insert"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Metadata", "Metadata", "equal"], ["metadata", "metadata", "equal"], [")", ")", "equal"], ["throws", "throws", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], [",", ",", "equal"], ["Interrupted", "Interrupted", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["{", "{", "equal"], ["try", "try", "equal"], ["{", "{", "equal"], ["", "final", "insert"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["=", "=", "equal"], ["new", "new", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["metadata", "metadata", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], ["=", "", "delete"], ["Coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Instance", "Instance", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [";", "", "delete"], ["coordination", "", "delete"], ["<con>", "", "delete"], ["Service", "", "delete"], [".", ".", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["(", "(", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], [".", ".", "equal"], ["Category", "Category", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], [".", ".", "equal"], ["CASES", "CASES", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["String", "String", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Array", "Array", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["return", "return", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["catch", "catch", "equal"], ["(", "(", "equal"], ["Parse", "Parse", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["|", "|", "equal"], ["IO", "IO", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["|", "|", "equal"], ["Coordination", "Coordination", "equal"], ["<con>", "<con>", "equal"], ["Service", "Service", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["throw", "throw", "equal"], ["new", "new", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Node", "Node", "equal"], ["<con>", "<con>", "equal"], ["Data", "Data", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["(", "(", "equal"], ["String", "String", "equal"], [".", ".", "equal"], ["format", "format", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["Failed", "Failed", "equal"], ["to", "to", "equal"], ["create", "create", "equal"], ["<con>", "", "delete"], ["/", "", "delete"], ["<con>", "", "delete"], ["write", "", "delete"], ["case", "case", "equal"], ["node", "node", "equal"], ["data", "data", "equal"], ["for", "for", "equal"], ["%", "%", "equal"], ["<con>", "<con>", "equal"], ["s", "s", "equal"], ["\"", "\"", "equal"], [",", ",", "equal"], ["metadata", "metadata", "equal"], [".", ".", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["<con>", "<con>", "equal"], ["Directory", "Directory", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [".", ".", "equal"], ["to", "to", "equal"], ["<con>", "<con>", "equal"], ["Upper", "Upper", "equal"], ["<con>", "<con>", "equal"], ["Case", "Case", "equal"], ["(", "(", "equal"], [")", ")", "equal"], [")", ")", "equal"], [",", ",", "equal"], ["ex", "ex", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Creates case node data from the metadata for a case and writes it to the\ncase directory coordination service node, which must already exist.", "dst_desc": "Creates case node data from the metadata for a case and writes it to the\nappropriate case directory coordination service node, which must already\nexist.", "src_desc_tokens": ["Creates", "case", "node", "data", "from", "the", "metadata", "for", "a", "case", "and", "writes", "it", "to", "the", "case", "directory", "coordination", "service", "node", "<con>", ",", "which", "must", "already", "exist", "<con>", "."], "dst_desc_tokens": ["Creates", "case", "node", "data", "from", "the", "metadata", "for", "a", "case", "and", "writes", "it", "to", "the", "appropriate", "case", "directory", "coordination", "service", "node", "<con>", ",", "which", "must", "already", "exist", "<con>", "."], "desc_change_seq": [["Creates", "Creates", "equal"], ["case", "case", "equal"], ["node", "node", "equal"], ["data", "data", "equal"], ["from", "from", "equal"], ["the", "the", "equal"], ["metadata", "metadata", "equal"], ["for", "for", "equal"], ["a", "a", "equal"], ["case", "case", "equal"], ["and", "and", "equal"], ["writes", "writes", "equal"], ["it", "it", "equal"], ["to", "to", "equal"], ["the", "the", "equal"], ["", "appropriate", "insert"], ["case", "case", "equal"], ["directory", "directory", "equal"], ["coordination", "coordination", "equal"], ["service", "service", "equal"], ["node", "node", "equal"], ["<con>", "<con>", "equal"], [",", ",", "equal"], ["which", "which", "equal"], ["must", "must", "equal"], ["already", "already", "equal"], ["exist", "exist", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 1}
{"sample_id": 5360687, "full_name": "spring-projects/spring-integration", "commit_id": "7efb14cf60d77057cb06c99e82c207077558255c", "src_method": "@ManagedMetric\n\tpublic Map<String, Object> getJdbcCallOperationsCacheStatisticsAsMap() {\n\t\tif (!guavaPresent) {\n\t\t\tthrow new UnsupportedOperationException(\"The Google Guava library isn't present in the classpath.\");\n\t\t}\n\t\tfinal CacheStats cacheStats = (CacheStats) getJdbcCallOperationsCacheStatistics();\n\t\tfinal Map<String, Object> cacheStatistics = new HashMap<String, Object>(11);\n\t\tcacheStatistics.put(\"averageLoadPenalty\", cacheStats.averageLoadPenalty());\n\t\tcacheStatistics.put(\"evictionCount\", cacheStats.evictionCount());\n\t\tcacheStatistics.put(\"hitCount\", cacheStats.hitCount());\n\t\tcacheStatistics.put(\"hitRate\", cacheStats.hitRate());\n\t\tcacheStatistics.put(\"loadCount\", cacheStats.loadCount());\n\t\tcacheStatistics.put(\"loadExceptionCount\", cacheStats.loadExceptionCount());\n\t\tcacheStatistics.put(\"loadExceptionRate\", cacheStats.loadExceptionRate());\n\t\tcacheStatistics.put(\"loadSuccessCount\", cacheStats.loadSuccessCount());\n\t\tcacheStatistics.put(\"missCount\", cacheStats.missCount());\n\t\tcacheStatistics.put(\"missRate\", cacheStats.missRate());\n\t\tcacheStatistics.put(\"totalLoadTime\", cacheStats.totalLoadTime());\n\t\treturn Collections.unmodifiableMap(cacheStatistics);\n\t}", "dst_method": "@Deprecated\n\tpublic Map<String, Object> getJdbcCallOperationsCacheStatisticsAsMap() {\n\t\tthrow new UnsupportedOperationException(\"The Google Guava cache isn't supported any more.\");\n\t}", "src_javadoc": "Allows for the retrieval of metrics ({@link CacheStats}) for the\n{@link GuavaCacheWrapper#jdbcCallOperationsCache}.\n\nProvides the properties of {@link CacheStats} as a {@link Map}. This allows\nfor exposing the those properties easily via JMX.", "dst_javadoc": "Allows for the retrieval of metrics.", "code_change_seq": [["@", "@", "equal"], ["Managed", "", "delete"], ["<con>", "", "delete"], ["Metric", "Deprecated", "replace"], ["public", "public", "equal"], ["Map", "Map", "equal"], ["<", "<", "equal"], ["String", "String", "equal"], [",", ",", "equal"], ["Object", "Object", "equal"], [">", ">", "equal"], ["get", "get", "equal"], ["<con>", "<con>", "equal"], ["Jdbc", "Jdbc", "equal"], ["<con>", "<con>", "equal"], ["Call", "Call", "equal"], ["<con>", "<con>", "equal"], ["Operations", "Operations", "equal"], ["<con>", "<con>", "equal"], ["Cache", "Cache", "equal"], ["<con>", "<con>", "equal"], ["Statistics", "Statistics", "equal"], ["<con>", "<con>", "equal"], ["As", "As", "equal"], ["<con>", "<con>", "equal"], ["Map", "Map", "equal"], ["(", "(", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["if", "", "delete"], ["(", "", "delete"], ["!", "", "delete"], ["guava", "", "delete"], ["<con>", "", "delete"], ["Present", "", "delete"], [")", "", "delete"], ["{", "", "delete"], ["throw", "throw", "equal"], ["new", "new", "equal"], ["Unsupported", "Unsupported", "equal"], ["<con>", "<con>", "equal"], ["Operation", "Operation", "equal"], ["<con>", "<con>", "equal"], ["Exception", "Exception", "equal"], ["(", "(", "equal"], ["\"", "\"", "equal"], ["The", "The", "equal"], ["Google", "Google", "equal"], ["Guava", "Guava", "equal"], ["library", "cache", "replace"], ["isn", "isn", "equal"], ["<con>", "<con>", "equal"], ["'", "'", "equal"], ["<con>", "<con>", "equal"], ["t", "t", "equal"], ["present", "supported", "replace"], ["in", "any", "replace"], ["the", "more", "replace"], ["classpath", "", "delete"], ["<con>", "<con>", "equal"], [".", ".", "equal"], ["\"", "\"", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["final", "", "delete"], ["Cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], ["=", "", "delete"], ["(", "", "delete"], ["Cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [")", "", "delete"], ["get", "", "delete"], ["<con>", "", "delete"], ["Jdbc", "", "delete"], ["<con>", "", "delete"], ["Call", "", "delete"], ["<con>", "", "delete"], ["Operations", "", "delete"], ["<con>", "", "delete"], ["Cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["final", "", "delete"], ["Map", "", "delete"], ["<", "", "delete"], ["String", "", "delete"], [",", "", "delete"], ["Object", "", "delete"], [">", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], ["=", "", "delete"], ["new", "", "delete"], ["Hash", "", "delete"], ["<con>", "", "delete"], ["Map", "", "delete"], ["<", "", "delete"], ["String", "", "delete"], [",", "", "delete"], ["Object", "", "delete"], [">", "", "delete"], ["(", "", "delete"], ["11", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["average", "", "delete"], ["<con>", "", "delete"], ["Load", "", "delete"], ["<con>", "", "delete"], ["Penalty", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["average", "", "delete"], ["<con>", "", "delete"], ["Load", "", "delete"], ["<con>", "", "delete"], ["Penalty", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["eviction", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["eviction", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["hit", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["hit", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["hit", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["hit", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Exception", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Exception", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Exception", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Exception", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Success", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["load", "", "delete"], ["<con>", "", "delete"], ["Success", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["miss", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["miss", "", "delete"], ["<con>", "", "delete"], ["Count", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["miss", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["miss", "", "delete"], ["<con>", "", "delete"], ["Rate", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [".", "", "delete"], ["put", "", "delete"], ["(", "", "delete"], ["\"", "", "delete"], ["total", "", "delete"], ["<con>", "", "delete"], ["Load", "", "delete"], ["<con>", "", "delete"], ["Time", "", "delete"], ["\"", "", "delete"], [",", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Stats", "", "delete"], [".", "", "delete"], ["total", "", "delete"], ["<con>", "", "delete"], ["Load", "", "delete"], ["<con>", "", "delete"], ["Time", "", "delete"], ["(", "", "delete"], [")", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["return", "", "delete"], ["Collections", "", "delete"], [".", "", "delete"], ["unmodifiable", "", "delete"], ["<con>", "", "delete"], ["Map", "", "delete"], ["(", "", "delete"], ["cache", "", "delete"], ["<con>", "", "delete"], ["Statistics", "", "delete"], [")", "", "delete"], [";", "", "delete"], ["}", "", "delete"]], "index": 0, "src_desc": "This allows\nfor exposing the those properties easily via JMX.", "dst_desc": "Allows for the retrieval of metrics.", "src_desc_tokens": ["This", "allows", "for", "exposing", "the", "those", "properties", "easily", "via", "JMX", "<con>", "."], "dst_desc_tokens": ["Allows", "for", "the", "retrieval", "of", "metrics", "<con>", "."], "desc_change_seq": [["This", "", "delete"], ["allows", "Allows", "replace"], ["for", "for", "equal"], ["exposing", "", "delete"], ["the", "the", "equal"], ["those", "retrieval", "replace"], ["properties", "of", "replace"], ["easily", "metrics", "replace"], ["via", "", "delete"], ["JMX", "", "delete"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 8}
{"sample_id": 1057270, "full_name": "apache/isis", "commit_id": "46509221735b51f226b91f40992f88bcbf64e1ff", "src_method": "public void invalidate(final ServletContext servletContext) {\n        servletContext.setAttribute(WebAppConstants.CONFIGURATION_BUILDER_KEY, null);\n    }", "dst_method": "public void invalidate() {\n        cfgBuilder = null;\n    }", "src_javadoc": "Removes any cashed IsisConfigurationBuilder instance from the ServletContext.", "dst_javadoc": "Removes any cached IsisConfigurationBuilder instance from this provider.", "code_change_seq": [["public", "public", "equal"], ["void", "void", "equal"], ["invalidate", "invalidate", "equal"], ["(", "(", "equal"], ["final", "", "delete"], ["Servlet", "", "delete"], ["<con>", "", "delete"], ["Context", "", "delete"], ["servlet", "", "delete"], ["<con>", "", "delete"], ["Context", "", "delete"], [")", ")", "equal"], ["{", "{", "equal"], ["servlet", "cfg", "replace"], ["<con>", "<con>", "equal"], ["Context", "Builder", "replace"], [".", "=", "replace"], ["set", "", "delete"], ["<con>", "", "delete"], ["Attribute", "", "delete"], ["(", "", "delete"], ["Web", "", "delete"], ["<con>", "", "delete"], ["App", "", "delete"], ["<con>", "", "delete"], ["Constants", "", "delete"], [".", "", "delete"], ["CONFIGURATION", "", "delete"], ["<con>", "", "delete"], ["_", "", "delete"], ["<con>", "", "delete"], ["BUILDER", "", "delete"], ["<con>", "", "delete"], ["_", "", "delete"], ["<con>", "", "delete"], ["KEY", "", "delete"], [",", "", "delete"], ["null", "null", "equal"], [")", "", "delete"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Removes any cashed IsisConfigurationBuilder instance from the ServletContext.", "dst_desc": "Removes any cached IsisConfigurationBuilder instance from this provider.", "src_desc_tokens": ["Removes", "any", "cashed", "Isis", "<con>", "Configuration", "<con>", "Builder", "instance", "from", "the", "Servlet", "<con>", "Context", "<con>", "."], "dst_desc_tokens": ["Removes", "any", "cached", "Isis", "<con>", "Configuration", "<con>", "Builder", "instance", "from", "this", "provider", "<con>", "."], "desc_change_seq": [["Removes", "Removes", "equal"], ["any", "any", "equal"], ["cashed", "cached", "replace"], ["Isis", "Isis", "equal"], ["<con>", "<con>", "equal"], ["Configuration", "Configuration", "equal"], ["<con>", "<con>", "equal"], ["Builder", "Builder", "equal"], ["instance", "instance", "equal"], ["from", "from", "equal"], ["the", "this", "replace"], ["Servlet", "provider", "replace"], ["<con>", "", "delete"], ["Context", "", "delete"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 5}
{"sample_id": 618564, "full_name": "apache/flink", "commit_id": "e03cea5431dc63f603469bdbe8c499f8819e3cbd", "src_method": "public static <T> StateSerializerProvider<T> fromNewState(TypeSerializer<T> registeredStateSerializer) {\n\t\treturn new NewStateSerializerProvider<>(registeredStateSerializer);\n\t}", "dst_method": "public static <T> StateSerializerProvider<T> fromNewRegisteredSerializer(TypeSerializer<T> registeredStateSerializer) {\n\t\treturn new EagerlyRegisteredStateSerializerProvider<>(registeredStateSerializer);\n\t}", "src_javadoc": "Creates a {@link StateSerializerProvider} for new state from the registered state serializer.", "dst_javadoc": "Creates a {@link StateSerializerProvider} from the registered state serializer.\n\nIf the state is a restored one, and the previous serializer's snapshot is\nobtained later on, is should be supplied via the\n{@link #setPreviousSerializerSnapshotForRestoredState(TypeSerializerSnapshot)} method.", "code_change_seq": [["public", "public", "equal"], ["static", "static", "equal"], ["<", "<", "equal"], ["T", "T", "equal"], [">", ">", "equal"], ["State", "State", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], ["<con>", "<con>", "equal"], ["Provider", "Provider", "equal"], ["<", "<", "equal"], ["T", "T", "equal"], [">", ">", "equal"], ["from", "from", "equal"], ["<con>", "<con>", "equal"], ["New", "New", "equal"], ["<con>", "<con>", "equal"], ["", "Registered", "insert"], ["", "<con>", "insert"], ["State", "Serializer", "replace"], ["(", "(", "equal"], ["Type", "Type", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], ["<", "<", "equal"], ["T", "T", "equal"], [">", ">", "equal"], ["registered", "registered", "equal"], ["<con>", "<con>", "equal"], ["State", "State", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["new", "new", "equal"], ["New", "Eagerly", "replace"], ["", "<con>", "insert"], ["", "Registered", "insert"], ["<con>", "<con>", "equal"], ["State", "State", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], ["<con>", "<con>", "equal"], ["Provider", "Provider", "equal"], ["<", "<", "equal"], [">", ">", "equal"], ["(", "(", "equal"], ["registered", "registered", "equal"], ["<con>", "<con>", "equal"], ["State", "State", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 0, "src_desc": "Creates a {@link StateSerializerProvider} for new state from the registered state serializer.", "dst_desc": "Creates a {@link StateSerializerProvider} from the registered state serializer.", "src_desc_tokens": ["Creates", "a", "{", "<con>", "@", "<con>", "link", "State", "<con>", "Serializer", "<con>", "Provider", "<con>", "}", "for", "new", "state", "from", "the", "registered", "state", "serializer", "<con>", "."], "dst_desc_tokens": ["Creates", "a", "{", "<con>", "@", "<con>", "link", "State", "<con>", "Serializer", "<con>", "Provider", "<con>", "}", "from", "the", "registered", "state", "serializer", "<con>", "."], "desc_change_seq": [["Creates", "Creates", "equal"], ["a", "a", "equal"], ["{", "{", "equal"], ["<con>", "<con>", "equal"], ["@", "@", "equal"], ["<con>", "<con>", "equal"], ["link", "link", "equal"], ["State", "State", "equal"], ["<con>", "<con>", "equal"], ["Serializer", "Serializer", "equal"], ["<con>", "<con>", "equal"], ["Provider", "Provider", "equal"], ["<con>", "<con>", "equal"], ["}", "}", "equal"], ["for", "", "delete"], ["new", "", "delete"], ["state", "", "delete"], ["from", "from", "equal"], ["the", "the", "equal"], ["registered", "registered", "equal"], ["state", "state", "equal"], ["serializer", "serializer", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 3}
{"sample_id": 3770845, "full_name": "vaadin/framework", "commit_id": "1817a82ed8f3c8839c18d9ce6b68e5838940a22c", "src_method": "public void expand(T item) {\n        if (!mapper.isExpanded(item) && mapper.hasChildren(item)) {\n            doExpand(item, mapper.getIndexOf(item));\n        }\n    }", "dst_method": "public void expand(T item) {\n        expand(item, true);\n    }", "src_javadoc": "Expands the given item. Calling this method will have no effect if the\nrow is already expanded.", "dst_javadoc": "Expands the given item. Calling this method will have no effect if the\nitem is already expanded or if it has no children.", "code_change_seq": [["public", "public", "equal"], ["void", "void", "equal"], ["expand", "expand", "equal"], ["(", "(", "equal"], ["T", "T", "equal"], ["item", "item", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["if", "", "delete"], ["(", "", "delete"], ["!", "", "delete"], ["mapper", "", "delete"], [".", "", "delete"], ["is", "", "delete"], ["<con>", "", "delete"], ["Expanded", "", "delete"], ["(", "", "delete"], ["item", "", "delete"], [")", "", "delete"], ["&&", "", "delete"], ["mapper", "", "delete"], [".", "", "delete"], ["has", "", "delete"], ["<con>", "", "delete"], ["Children", "", "delete"], ["(", "", "delete"], ["item", "", "delete"], [")", "", "delete"], [")", "", "delete"], ["{", "", "delete"], ["do", "", "delete"], ["<con>", "", "delete"], ["Expand", "expand", "replace"], ["(", "(", "equal"], ["item", "item", "equal"], [",", ",", "equal"], ["mapper", "true", "replace"], [".", "", "delete"], ["get", "", "delete"], ["<con>", "", "delete"], ["Index", "", "delete"], ["<con>", "", "delete"], ["Of", "", "delete"], ["(", "", "delete"], ["item", "", "delete"], [")", "", "delete"], [")", ")", "equal"], [";", ";", "equal"], ["}", "}", "equal"], ["}", "", "delete"]], "index": 1, "src_desc": "Calling this method will have no effect if the\nrow is already expanded.", "dst_desc": "Calling this method will have no effect if the\nitem is already expanded or if it has no children.", "src_desc_tokens": ["Calling", "this", "method", "will", "have", "no", "effect", "if", "the", "row", "is", "already", "expanded", "<con>", "."], "dst_desc_tokens": ["Calling", "this", "method", "will", "have", "no", "effect", "if", "the", "item", "is", "already", "expanded", "or", "if", "it", "has", "no", "children", "<con>", "."], "desc_change_seq": [["Calling", "Calling", "equal"], ["this", "this", "equal"], ["method", "method", "equal"], ["will", "will", "equal"], ["have", "have", "equal"], ["no", "no", "equal"], ["effect", "effect", "equal"], ["if", "if", "equal"], ["the", "the", "equal"], ["row", "item", "replace"], ["is", "is", "equal"], ["already", "already", "equal"], ["expanded", "expanded", "equal"], ["", "or", "insert"], ["", "if", "insert"], ["", "it", "insert"], ["", "has", "insert"], ["", "no", "insert"], ["", "children", "insert"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 7}
{"sample_id": 2680269, "full_name": "material-components/material-components-android", "commit_id": "b41b07af5cc70b895c61daa33a35bca116a6354d", "src_method": "public boolean isIgnoreGestureInsetBottom() {\n    return ignoreGestureInsetBottom;\n  }", "dst_method": "public boolean isGestureInsetBottomIgnored() {\n    return gestureInsetBottomIgnored;\n  }", "src_javadoc": "Returns whether this bottom bar should adjust it's position based on the system gesture area on\nAndroid Q and above. See {@link #setIgnoreGestureInsetBottom(boolean)}.", "dst_javadoc": "Returns whether this bottom bar should adjust it's position based on the system gesture area on\nAndroid Q and above. See {@link #setGestureInsetBottomIgnored(boolean)}.", "code_change_seq": [["public", "public", "equal"], ["boolean", "boolean", "equal"], ["is", "is", "equal"], ["<con>", "", "delete"], ["Ignore", "", "delete"], ["<con>", "<con>", "equal"], ["Gesture", "Gesture", "equal"], ["<con>", "<con>", "equal"], ["Inset", "Inset", "equal"], ["<con>", "<con>", "equal"], ["Bottom", "Bottom", "equal"], ["", "<con>", "insert"], ["", "Ignored", "insert"], ["(", "(", "equal"], [")", ")", "equal"], ["{", "{", "equal"], ["return", "return", "equal"], ["ignore", "", "delete"], ["<con>", "", "delete"], ["Gesture", "gesture", "replace"], ["<con>", "<con>", "equal"], ["Inset", "Inset", "equal"], ["<con>", "<con>", "equal"], ["Bottom", "Bottom", "equal"], ["", "<con>", "insert"], ["", "Ignored", "insert"], [";", ";", "equal"], ["}", "}", "equal"]], "index": 2, "src_desc": "See {@link #setIgnoreGestureInsetBottom(boolean)}.", "dst_desc": "See {@link #setGestureInsetBottomIgnored(boolean)}.", "src_desc_tokens": ["See", "{", "<con>", "@", "<con>", "link", "#", "<con>", "set", "<con>", "Ignore", "<con>", "Gesture", "<con>", "Inset", "<con>", "Bottom", "<con>", "(", "<con>", "boolean", "<con>", ")", "<con>", "}", "<con>", "."], "dst_desc_tokens": ["See", "{", "<con>", "@", "<con>", "link", "#", "<con>", "set", "<con>", "Gesture", "<con>", "Inset", "<con>", "Bottom", "<con>", "Ignored", "<con>", "(", "<con>", "boolean", "<con>", ")", "<con>", "}", "<con>", "."], "desc_change_seq": [["See", "See", "equal"], ["{", "{", "equal"], ["<con>", "<con>", "equal"], ["@", "@", "equal"], ["<con>", "<con>", "equal"], ["link", "link", "equal"], ["#", "#", "equal"], ["<con>", "<con>", "equal"], ["set", "set", "equal"], ["<con>", "<con>", "equal"], ["Ignore", "", "delete"], ["<con>", "", "delete"], ["Gesture", "Gesture", "equal"], ["<con>", "<con>", "equal"], ["Inset", "Inset", "equal"], ["<con>", "<con>", "equal"], ["Bottom", "Bottom", "equal"], ["", "<con>", "insert"], ["", "Ignored", "insert"], ["<con>", "<con>", "equal"], ["(", "(", "equal"], ["<con>", "<con>", "equal"], ["boolean", "boolean", "equal"], ["<con>", "<con>", "equal"], [")", ")", "equal"], ["<con>", "<con>", "equal"], ["}", "}", "equal"], ["<con>", "<con>", "equal"], [".", ".", "equal"]], "dist": 4}
